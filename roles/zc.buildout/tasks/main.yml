---

- include: base.yml


- name: Ensure buildout directory exists
  file: 
    path="{{ buildout.path }}{{ buildout.directory }}"
    state=directory
    owner=plone_buildout
    group=plone_group
    mode="u=rwx,g=rx,o=rx"

- name: Checkout buildout from git
  git:
    repo={{ buildout.src.src }}
    dest="{{ buildout.path }}{{ buildout.directory }}"
    clone=yes
    remote=origin
    update=yes
    version={{ buildout.src.rev }}
    force=yes
  when: buildout.src.type|lower == "git" and buildout.src.src
  become_user: plone_buildout
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"

- name: Checkout buildout from subversion
  subversion:
    repo={{ buildout.src.src }}
    dest="{{ buildout.path }}{{ buildout.directory }}"
    revision={{ buildout.src.rev }}
  when: buildout.src.type|lower == "svn" and buildout.src.src
  become_user: plone_buildout
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"

- name: Ensure buildout-directory is owned by user plone_buildout
  file:
    path="{{ buildout.path }}{{ buildout.directory }}"
    mode="u=rwx,g=rx,o=rx"
    owner=plone_buildout
    group=plone_group
    recurse=yes
    state=directory

- name: install zc.buildout
  pip: 
    name=zc.buildout
    state=present
    virtualenv="{{ buildout.path }}{{ buildout.directory }}"
    extra_args='--cert /etc/ssl/certs/Verwaltungsnetz-Proxy-PEM.pem'
    #virtualenv_python={{ buildout.python }}
  #become_user: plone_buildout
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"

- name: Ensure buildout-directory is owned by user plone_buildout
  file:
    path="{{ buildout.path }}{{ buildout.directory }}"
    mode="u=rwx,g=rx,o=rx"
    owner=plone_buildout
    group=plone_group
    recurse=yes
    state=directory

- name: Ensure a /data/{{buildout.directory}}/var directory owned by user plone_daemon exists
  file:
    path=/data/{{ buildout.directory }}/var
    mode="u=rwx,g=rwx,o=rx"
    owner=plone_daemon
    group=plone_group
    recurse=yes
    state=directory

- name: Ensure buildout-var-directory is aktually a symlink to /data/{{buildout.directory}}/var owned by user plone_daemon
  file:
    path="{{ buildout.path }}{{ buildout.directory }}/var"
    src=/data/{{ buildout.directory }}/var
    owner=plone_daemon
    group=plone_group
    state=link
    force=yes

- name: Ensure buildout-var-directory is owned by user plone_daemon
  file:
    path="{{ buildout.path }}{{ buildout.directory }}/var/."
    mode="u=rwx,g=rwx,o=rx"
    owner=plone_daemon
    group=plone_group
    recurse=yes
    state=directory

- name: Preset Buildout config
  file:
    path="{{ buildout.path }}{{ buildout.directory }}/buildout.cfg"
    src="{{ buildout.path }}{{ buildout.directory }}/{{ buildout.config }}"
    state=link
    owner=plone_buildout
    group=plone_group

- name: Copy secrets.cfg if provided
  template:
    dest="{{ buildout.path }}{{ buildout.directory }}/secrets.cfg"
    src={{ buildout.secrets }}
    owner=plone_buildout
    group=plone_group
    mode="u=r,g=,o="
  when: buildout.requires_secrets

- name: ensure supervisor conf.d directory is writeable for plone_buildout
  file:
    path=/etc/supervisor/conf.d
    state=directory
    owner=plone_buildout
    group=plone_group
    mode="u=rwx,g=rx,o=rx"

- name: Run buildout
  command: ./bin/buildout
    chdir="{{ buildout.path }}{{ buildout.directory }}"
  environment:
    VIRTUAL_ENV: "{{ buildout.directory }}"
    PATH: "{{ buildout.directory }}/bin:{{ ansible_env.PATH }}"
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
  become_user: plone_buildout

- name: set normal file rights for supervisor conf.d directory
  file:
    path=/etc/supervisor/conf.d
    state=directory
    owner=root
    group=root
    mode="u=rwx,g=rx,o=rx"