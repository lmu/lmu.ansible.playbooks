- include_vars: "{{ ansible_os_family }}.yml"

- name: install python-related packages
  apt: pkg={{ item }} state=latest
  with_items:
    - libxslt-dev
    - libxml2-dev
    - libz-dev
    - libffi-dev
    - libssl-dev
    - python-dev
    - python2.7-dev
    - python-setuptools
    - python-pip
    - python-virtualenv
    - python-lxml
    - python2.7-lxml
  when: ansible_os_family == "Debian"

#- name: build python-related dependencies
#  apt: pkg={{ item }} state=build-dep
#  with_items:
#    - python-cffi
#  when: ansible_os_family == "Debian"

- name: ensure sentry directory exists
  file:
    path: /var/sentry/
    state: directory

- name: install sentry and create virtualenv if needed
  pip:
    name: sentry[postgres]
    virtualenv: /var/sentry/ve
    virtualenv_site_packages: no

- name: Copy sentry configuration
  template: 
    src=sentry_conf.py.j2
    dest=/var/sentry/sentry_conf.py
  notify: restart nginx

- name: Copy nginx configuration for sentry
  template: 
    src=nginx-sentry.conf.j2
    dest=/etc/nginx/sites-available/sentry.conf
    owner={{ nginx_user }}
    group={{ nginx_group }}

- name: Link nginx configuration for sentry
  file: 
    src=/etc/nginx/sites-available/sentry.conf
    dest=/etc/nginx/sites-enabled/sentry.conf
    state=link
    owner={{ nginx_user }}
    group={{ nginx_group }}
  notify:
    - restart nginx

- name: Copy supervisor configuration for sentry
  template: 
    src=supervisor-sentry.conf.j2
    dest=/etc/supervisor/conf.d/sentry.conf
  notify: 
    - reload supervisor

- name: Setup database for sentry
  sudo_user: postgres
  postgresql_db:
    db: "{{ sentry_db.name }}"
    encoding: 'UTF-8'
    lc_collate: 'en_US.UTF-8'
    lc_ctype: 'en_US.UTF-8'
    template: 'template0'
    state: present

- name: grant access for database to user
  sudo_user: postgres
  postgresql_user:
    db: "{{ sentry_db.name }}"
    user: "{{ sentry_db.user }}"
    password: "{{ sentry_db.password }}"
    role_attr_flags: "CREATEDB,SUPERUSER"
    state: present

- name: sentry upgrade
  shell: /var/sentry/ve/bin/sentry --config=sentry_conf.py upgrade
    executable=/bin/bash
    chdir=/var/sentry
  notify:
    - restart nginx
    - reload supervisor

- name: Copy Script to create superuser
  template:
    src: create_superuser.py.j2
    dest: /var/sentry/create_superuser.py
    mode: "0755"

- name: create admin user
  shell: /var/sentry/create_superuser.py
    chdir=/var/sentry
    creates=/var/sentry/adminPassword.txt
    #executable=/var/sentry/ve/bin/python
  environment:
    SENTRY_CONF: /var/sentry/sentry_conf.py
    VIRTUAL_ENV: /var/sentry/ve
    PATH: /var/sentry/ve/bin:{{ ansible_env.PATH }}
  notify:
    - restart nginx
    - reload supervisor
