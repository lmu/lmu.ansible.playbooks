
server {
  listen {{ redmine.nginx_port }};
  listen [::]:{{ redmine.nginx_port }};
  server_name {{ redmine.domain }};

  return 301 https://$server_name$request_uri;
}

server {
  listen {{ redmine.nginx_ssl_port }} ssl spdy default_server;
  server_name {{ redmine.domain }};

  ssl on;
  ssl_certificate /etc/ssl/private/{{ redmine.domain }}_chained_crt.pem; # Chain
  ssl_certificate_key /etc/ssl/private/{{ redmine.domain }}_key.pem; # Key
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers HIGH:!aNULL:!MD5;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;

  # ~2 seconds is often enough for most folks to parse HTML/CSS and
  # retrieve needed images/icons/frames, connections are cheap in
  # nginx so increasing this is generally safe...
  keepalive_timeout 5;

  # path for static files
  root {{ redmine.app_base_path}}/{{ instance.name }}/public;
  access_log {{ redmine.log_base_path}}/{{ instance.name }}/production.access.log;
  error_log {{ redmine.log_base_path}}/{{ instance.name }}/production.error.log info;

  # this rewrites all the requests to the maintenance.html
  # page if it exists in the doc root. This is for capistrano's
  # disable web task
  if (-f $document_root/maintenance.html) {
    rewrite  ^(.*)$  /maintenance.html last;
    break;
  }

  proxy_set_header Host $http_host;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  proxy_redirect off;
  proxy_read_timeout 300;

{% for instance in redmine_instance.values() %}
{% for alias in instance.alias + [instance.name] %}
  location /{{ alias }}/ {
    proxy_pass "http://127.0.0.1:{{ instance.nginx_port }}/";
    env RAILS_RELATIVE_URL_ROOT="/{{ alias }}";
  }
{% endfor %}
{% endfor %}

  # Error pages
  # error_page 500 502 503 504 /500.html;
  location = /500.html {
    root /redmine/current/public;
  }
}
