---

- name: "Ensure base dependencies for managing PostgreSQL are installed."
  yum:
    pkg={{ item }}
    state=present
  with_items:
    - libselinux-python
    - policycoreutils-python
    - python-psycopg2
  # Psycopy2 is a dependency for Ansible itself to handle PostgreSQL Commands
  # libselinux-python and policycoreutils-python are dependencies for Managing
  #   SELinux settings.

- name: "Set SELinux in Permissive mode"
  selinux:
    policy: targeted
    state: permissive

- name: "Install PostgreSQL Packages (from Software Collections)"
  yum:
    pkg={{ item }}
    state=present
  with_items:
    - rh-postgresql95-postgresql-server
    - rh-postgresql95-postgresql
    - rh-postgresql95
    - rh-postgresql95-postgresql-devel
    - rh-postgresql95-postgresql-libs
    - rh-postgresql95-postgresql-contrib
    - libpqxx-devel
    - libpqxx
    - pg_top
  when: ansible_os_family == "RedHat" and use_sc

- name: "Install PostgreSQL Packages (from Base Repository)"
  yum:
    pkg={{ item }}
    state=present
  with_items:
    - postgresql-server
    - postgresql
    - postgresql-devel
    - postgresql-libs
    - postgresql-contrib
    - libpqxx-devel
    - libpqxx
    - pg_top
  when: ansible_os_family == "RedHat" and not use_sc

- name: "Ensure PostgreSQL Data Directory exists"
  file:
    path="{{ database.data_directory | default('/data/postgresql') }}"
    state=directory
    owner=postgres
    group=postgres
    setype=postgresql_db_t
    seuser=system_u
    mode="u=rwx,g=,o="

- name: "Ensure PostgreSQL Database is intialized"
  command: postgresql-setup --initdb
    creates="{{ database.data_directory | default('/data/postgresql')}}/postgresql.conf"
    chdir="{{ database.data_directory | default('/data/postgresql')}}"
  when: 'not use_sc'
  notify:
    - "Restart PostgreSQL"

#- name: "Ensure PostgreSQL Database is intialized (Use Software Collections)"
#  command: /opt/rh/rh-postgresql95/root/usr/bin/postgresql-setup --initdb
#    creates="{{ database.data_directory | default('/data/postgresql')}}/postgresql.conf"
#    chdir="{{ database.data_directory | default('/data/postgresql')}}"
##  when: 'not db_exists.stat.exists and use_sc'
#  when: use_sc
#  register: db_created
#  notify:
#    - "Restart PostgreSQL"

#- name: "Ensure PostgreSQL Database is intialized (Use Base Repository)"
#  command: initdb -D "{{ database.data_directory | default('/data/postgresql')}}"
#    creates="{{ database.data_directory | default('/data/postgresql')}}/postgresql.conf"
#    chdir="{{ database.data_directory | default('/data/postgresql')}}"
##  when: 'not db_exists.stat.exists and not use_sc'
#  when: 'not use_sc'
#  register: db_created
#  become: yes
#  become_user: postgres
#  notify:
#    - "Restart PostgreSQL"

#- name: "Set specific systemd service file for postgres"
#  template:
#    src=postgresql.service.centos.j2
#    dest="/etc/systemd/system/postgresql.service"
#    owner=root
#    group=root
#    mode="u=rw,g=r,o=r"

- name: "Grant SELinux permissions to Postgres user on "
  sefcontext:
    target="{{ database.data_directory | default('/data/postgresql')}}"
    setype=postgresql_db_t
    seuser=system_u
    state=present

- name: "Copy the configuration files for PostgreSQL"
  template:
    src={{ item }}.CentOS7.j2
    dest="{{ database.data_directory | default('/data/postgresql')}}/{{ item }}"
    force=yes
    owner=postgres
    group=postgres
    mode="u=rw,g=,o="
  with_items:
#    - postgresql.conf
#    - pg_ident.conf
    - pg_hba.conf
#    - start.conf
  notify:
    - "Restart PostgreSQL"

#- name: "Ensure PostgreSQL is started and enabled on boot (Use PostgreSQL from Software Collections)."
#  service:
#    name=rh-postgresql95-postgresql
#    state=restarted
#    enabled=yes
#  when: 'use_sc'

- name: "Ensure PostgreSQL is started and enabled on boot (Use PostgreSQL from Base Repository)."
  service:
    name=postgresql
    state=restarted
    enabled=yes
  when: 'not use_sc'

...
