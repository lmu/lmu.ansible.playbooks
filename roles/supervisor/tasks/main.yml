---

- block:
  # "Install Supervisor via Debian / Ubuntu Repository"

  - name: "Install Supervisor"
    apt:
      pkg=supervisor
      state=present
    when: ansible_os_family == "Debian"

  when: '"{{ supervisor.use_system | default("no") }}" == "yes"'

- block:
  # "Install Supervisor via Python Package Index"
  - name: "Ensure Base-Packages (common) are installed (Debian/Ubuntu)"
    apt:
      pkg={{ item }}
      state=present
      update_cache=yes
    with_items:
      - aptitude
      - python
      - python-dev
      - python-setuptools
      - python-pip
      - python-virtualenv
      - python3
      - python3-dev
      - python3-setuptools
      - python3-pip
      # - python3-virtualenv
      - curl
      - wget
      - bzip2
      - gzip
      - unzip
    when: ansible_os_family == "Debian"

  - name: "Ensure Base-Packages (common) are installed (Debian/Ubuntu)"
    yum:
      pkg={{ item }}
      state=present
      update_cache=yes
    with_items:
      - python
      - python-devel
      - python-setuptools
      - python-pip
      - python-virtualenv
      - curl
      - wget
      - bzip2
      - gzip
      - unzip
    when: ansible_os_family == "RedHat"

  - name: "Ensure Supervisor is not installed via System Repository"
    apt:
      pkg=supervisor
      state=absent
    when: ansible_os_family == "Debian"

  - name: "Ensure Supervisor is not installed via System Repository"
    yum:
      pkg=supervisor
      state=absent
    when: ansible_os_family == "RedHat"

  - name: "Ensure supervisor path: '{{ psdash.path }}' exists"
    file:
      path="{{ supervisor.path | default('/usr/local/venv-supervisor') }}"
      state=directory
      owner=root
      group=root
      mode="u=rwx,g=rwx,o=rx"

  - name: "Set supervisor requirements.txt"
    template:
      src: requirements.txt.j2
      dest: "{{ supervisor.path | default('/usr/local/venv-supervisor') }}/requirements.txt"
      owner: root
      group: root
      mode: "u=rwx,g=rx,o=rx"
    vars:
      req_items:
        - supervisor
        - superlance

  - name: "Install Supervisor"
    pip:
      requirements="{{ supervisor.path | default('/usr/local/venv-supervisor') }}/requirements.txt"
      state=latest
      virtualenv="{{ supervisor.path | default('/usr/local/venv-supervisor') }}"
      chdir="{{ supervisor.path | default('/usr/local/venv-supervisor') }}"
      virtualenv_python="python2.7"
    with_items:
      - supervisor
      - superlance
    become_user: root
    environment:
      http_proxy: "{{ lookup('env', 'http_proxy') }}"
      https_proxy: "{{ lookup('env', 'https_proxy') }}"

  - name: "Install Supervisor Init-Script"
    template:
      src="supervisord.init.j2"
      dest="/etc/init.d/supervisor"
      owner=root
      group=root
      mode="u=rwx,g=rx,o=rx"
      validate=""
    when: ansible_service_mgr == "upstart"

  - name: "Install Supervisor SystemD-Script"
    template:
      src="supervisor.service.j2"
      dest="/lib/systemd/system/supervisor.service"
      owner=root
      group=root
      mode="u=rwx,g=rx,o=rx"
      validate=""
    when: ansible_service_mgr == "systemd"

  - name: "Install Supervisor Defaults"
    template:
      src="supervisord.defaults.j2"
      dest="/etc/default/supervisor"
      owner=root
      group=root
      mode="u=rw,g=r,o=r"
      validate=""

  when: '"{{ supervisor.use_system | default("no") }}" == "no"'

- name: "Ensure supervisor Directory exists"
  file:
    path="{{ item }}"
    state=directory
    owner=root
    group=root
    mode="u=rwx,g=rx,o=rx"
  with_items:
    - "/etc/supervisor"
    - "/etc/supervisor/conf.d"
    - "/var/log/supervisor"

- name: "Copy supervisor global configuration"
  template:
    src="supervisord.conf.j2"
    dest="/etc/supervisor/supervisord.conf"
    owner=root
    group=root
    mode="u=rw,g=r,o=r"
    validate=""

- name: "Make Supervisor Commands available in /usr/local/bin"
  file:
    src="{{ supervisor.path | default('/usr/local/venv-supervisor') }}/bin/{{ item }}"
    dest="/usr/local/bin/{{ item }}"
    state=link
    owner=root
    group=root
    mode="u=rwx,g=rx,o=rx"
  with_items:
    - supervisord
    - supervisorctl

- name: "Start the Supervisor service and enable on boot"
  service:
    name=supervisor
    state=started
    enabled=yes

...
