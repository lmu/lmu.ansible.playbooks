---

- name: "Rename hostname to intended hostname"
  hostname:
    name={{ inventory_hostname }}
  when: '"{{ inventory_hostname }}" != "localhost"'

- name: "Ensure Group 'sudo' exists"
  group:
    name="{{ item }}"
    state=present
  with_items:
    - sudo
    - wheel

- name: "Ensure User 'ansible' exists"
  user:
    name=ansible
    comment="Ansible User for Provisioning with Ansible"
    state=present
    shell="/bin/bash"
    groups="sudo,wheel"
    system=yes

- name: "Ensure that admin-users can login via SSH Public Key (Transfere Public Key)"
  authorized_key:
    user="ansible"
    key="{{ lookup('file', '{{ item }}' )}}"
    state=present
  with_fileglob:
    - "files/ssh-keys/ansible/*.pub"

- name: "Update sshd_config"
  template:
    dest="/etc/ssh/sshd_config"
    src="sshd_config.j2"
    owner=root
    group=root
    mode="u=rw,g=r,o=r"
  notify:
    - "Reload sshd"

- name: "Ensure that User 'ansible' can sudo with public key (sudoer-file)"
  template:
    dest="/etc/sudoers"
    src="sudoers.j2"
    owner=root
    group=root
    mode="u=r,g=r,o="
    validate="visudo -cf %s"

- name: "Ensure Base-Packages (common) are installed (Debian/Ubuntu)"
  apt:
    pkg={{ item }}
    state=present
    update_cache=yes
  with_items:
    - aptitude
    - ssl-cert
    #- update-notifier-common
    - software-properties-common
    - apt-transport-https
    - facter
    - ohai
    - python
    - python-dev
    - python-setuptools
    - python-pip
    - python-virtualenv
    - python3
    - python3-dev
    - python3-setuptools
    - python3-pip
    # - python3-virtualenv
    - vim
    - curl
    - wget
    - bzip2
    - gzip
    - unzip
    - libffi-dev
    - libssl-dev
    #
    - git-core
  when: ansible_os_family == "Debian"

- name: "Add EPEL repository (RedHat/CentOS)"
  yum_repository:
    name=epel
    description="EPEL YUM repo"
    baseurl=http://download.fedoraproject.org/pub/epel/$releasever/$basearch/
  when: ansible_os_family == "RedHat"

- name: "Import EPEL GPG repository key"
  rpm_key:
   key="https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7"
   state=present
   validate_certs=no
  when: ansible_os_family == "RedHat"

- name: "Ensure Base-Packages (common) are installed (RedHat/CentOS)"
  yum:
    name={{ item }}
    state=present
    update_cache=yes
  with_items:
    - yum-plugin-ps
    - yum-plugin-security
    - ca-certificates
    #- update-notifier-common
    #- software-properties-common
    - facter
    #- ohai
    - python
    - python-devel
    - python-setuptools
    - python-pip
    - python-virtualenv
    - python34
    - python34-devel
    - python34-setuptools
    #- python34-pip
    #- python34-virtualenv
    - vim
    - curl
    - wget
    - bzip2
    - gzip
    - unzip
    - libffi-devel
    - openssl-devel
    #
    - git-core
  when: ansible_os_family == "RedHat"

- name: "Gobal Git Conf to use https.// instead of git:// for Github."
  git_config:
    name='url."https://github.com".insteadOf'
    value="git://github.com"
    scope=global

- name: "Ensure Base-Packages (Analysis Tools / top's) are installed (Debian/Ubuntu)"
  apt:
    pkg={{ item }}
    state=present
    update_cache=yes
  with_items:
    - htop
    - atop
    - iftop
    - itop
    - iotop
    - jnettop
    - dnstop
    - logtop
    - powertop
    - kerneltop
  when: ansible_os_family == "Debian"

- name: "Ensure Base-Packages (Analysis Tools / top's) are installed (RedHat/CentOS)"
  yum:
    name={{ item }}
    state=present
    update_cache=yes
  with_items:
    - htop
    - atop
    - iftop
    #- itop
    - iotop
    #- jnettop
    - dnstop
    #- logtop
    - powertop
    #- kerneltop
  when: ansible_os_family == "RedHat"

- name: "Ensure Data Directory exists"
  file:
    path="/data"
    state=directory
    owner=root
    group=root
    mode="u=rwx,g=rx,o=rx"

- name: "Set Cron Tab for Auto Upgrade (safe) (Debian/Ubuntu)"
  cron:
    name="Hourly Safe Upgrades"
    job="aptitude safe-upgrade -y"
    user='root'
    state=present
    special_time=hourly
  become: true
  when: ansible_os_family == "Debian"

- name: "Set Cron Tab for Auto Upgrade (safe) (RedHat/CentOS)"
  cron:
    name="Hourly Safe Upgrades"
    job="yum update -y --security"
    user='root'
    state=present
    special_time=hourly
  become: true
  when: ansible_os_family == "RedHat"

- name: "Include supervisor Role"
  include_role:
    name: "supervisor"

- name: "Include psdash Role"
  include_role:
    name: "psdash"

...
