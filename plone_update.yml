---

- hosts: zope-clients-martius4-production
  become: true
  serial: 1

  tasks:
    - name: "Disable Production Server / Zope-Clients (Serverraum Martius4) on Load Balancing WebProxy1"
      haproxy:
        state=disabled
        host={{ ansible_hostname }}-{{ item.name }}
        backend={{ item.backend }}
        wait=yes
      delegate_to: webproxy1.verwaltung.uni-muenchen.de
      ignore_errors: yes
      with_items:
        - { backend: 'plone-cluster-martius4', name: 'clients' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client1' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client2' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client3' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client4' }

    - name: "Disable Production Server / Zope-Clients (Serverraum Martius4) on Load Balancing WebProxy2"
      haproxy:
        state=disabled
        host={{ ansible_hostname }}-{{ item.name }}
        backend={{ item.backend }}
        wait=yes
      delegate_to: webproxy2.verwaltung.uni-muenchen.de
      ignore_errors: yes
      with_items:
        - { backend: 'plone-cluster-martius4', name: 'clients' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client1' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client2' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client3' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client4' }

    - name: "Stop Zope Clients via Supervisor"
      supervisorctl:
        name={{ item }}
        state=stopped
      with_items:
        - "clients:client1"
        - "clients:client2"
        - "clients:client3"
        - "clients:client4"
        - "HttpOkClient1"
        - "HttpOkClient2"
        - "HttpOkClient3"
        - "HttpOkClient4"

- hosts: zope-clients-martius4-production
  become: true

  roles:
    -  { role: maintenance,
         maintenance: {
            upgrade_type: "full",
            allow_reboot: false
         }
       }
    -  { role: zc.buildout,
         buildout: {
            path: /usr/local/,
            directory: buildout.zope-clients-production,
            src: {
                type: git,
                src: "https://github.com/loechel/lmu-iuk.buildout.git",
                rev: buildout-cleanup,
            },
            config: zope-clients-production.cfg,
            python: python2.7,
            buildout_user: plone_buildout,
            requires_secrets: true,
            secrets: 'templates/secrets.cfg.j2',
          login: 'admin',
          password: 'admin',
         }}
    -  { role: maintenance,
         maintenance: {
            upgrade_type: "full",
            allow_reboot: true
         }
       }


- hosts: zope-clients-martius4-production
  become: true
  serial: 1

  tasks:

    - name: "Update Supervisorctl - Ensure Zope Clients are present"
      supervisorctl:
        name={{ item }}
        state=present
      with_items:
        - "clients:client1"
        - "clients:client2"
        - "clients:client3"
        - "clients:client4"
        - "HttpOkClient1"
        - "HttpOkClient2"
        - "HttpOkClient3"
        - "HttpOkClient4"

    - name: "Start Zope Clients via Supervisor"
      supervisorctl:
        name={{ item }}
        state=started
      with_items:
        - "clients:client1"
        - "clients:client2"
        - "clients:client3"
        - "clients:client4"
        - "HttpOkClient1"
        - "HttpOkClient2"
        - "HttpOkClient3"
        - "HttpOkClient4"

    - name: "Enable Production Server / Zope-Clients (Serverraum Martius4) on Load Balancing WebProxy1"
      haproxy:
        state=enabled
        host={{ ansible_hostname }}-{{ item.name }}
        backend={{ item.backend }}
        wait=yes
      delegate_to: webproxy1.verwaltung.uni-muenchen.de
      ignore_errors: yes
      with_items:
        - { backend: '{{ ansible_hostname }}-clients', name: 'client1' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client2' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client3' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client4' }
        - { backend: 'plone-cluster-martius4', name: 'clients' }

    - name: "Enable Production Server / Zope-Clients (Serverraum Martius4) on Load Balancing WebProxy2"
      haproxy:
        state=enabled
        host={{ ansible_hostname }}-{{ item.name }}
        backend={{ item.backend }}
        wait=yes
      delegate_to: webproxy2.verwaltung.uni-muenchen.de
      ignore_errors: yes
      with_items:
        - { backend: '{{ ansible_hostname }}-clients', name: 'client1' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client2' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client3' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client4' }
        - { backend: 'plone-cluster-martius4', name: 'clients' }

- hosts: zope-clients-ludwig27-production
  become: true
  serial: 1

  tasks:
    - name: "Disable Production Server / Zope-Clients (Serverraum Ludwig27) on Load Balancing WebProxy1"
      haproxy:
        state=disabled
        host={{ ansible_hostname }}-{{ item.name }}
        backend={{ item.backend }}
        wait=yes
      delegate_to: webproxy1.verwaltung.uni-muenchen.de
      ignore_errors: yes
      with_items:
        - { backend: 'plone-cluster-ludwig27', name: 'clients' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client1' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client2' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client3' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client4' }

    - name: "Disable Production Server / Zope-Clients (Serverraum Ludwig27) on Load Balancing WebProxy2"
      haproxy:
        state=disabled
        host={{ ansible_hostname }}-{{ item.name }}
        backend={{ item.backend }}
        wait=yes
      delegate_to: webproxy2.verwaltung.uni-muenchen.de
      ignore_errors: yes
      with_items:
        - { backend: 'plone-cluster-ludwig27', name: 'clients' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client1' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client2' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client3' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client4' }

    - name: "Stop Zope Clients via Supervisor"
      supervisorctl:
        name={{ item }}
        state=stopped
      with_items:
        - "clients:client1"
        - "clients:client2"
        - "clients:client3"
        - "clients:client4"
        - "HttpOkClient1"
        - "HttpOkClient2"
        - "HttpOkClient3"
        - "HttpOkClient4"

- hosts: zope-clients-ludwig27-production
  become: true

  roles:
    -  { role: maintenance,
         maintenance: {
            upgrade_type: "full",
            allow_reboot: false
         }
       }
    -  { role: zc.buildout,
         buildout: {
            path: /usr/local/,
            directory: buildout.zope-clients-production,
            src: {
                type: git,
                src: "https://github.com/loechel/lmu-iuk.buildout.git",
                rev: buildout-cleanup,
            },
            config: zope-clients-production.cfg,
            python: python2.7,
            buildout_user: plone_buildout,
            requires_secrets: true,
            secrets: 'templates/secrets.cfg.j2',
          login: 'admin',
          password: 'admin',
         }}
    -  { role: maintenance,
         maintenance: {
            upgrade_type: "full",
            allow_reboot: true
         }
       }


- hosts: zope-clients-ludwig27-production
  become: true
  serial: 1

  tasks:

    - name: "Update Supervisorctl - Ensure Zope Clients are present"
      supervisorctl:
        name={{ item }}
        state=present
      with_items:
        - "clients:client1"
        - "clients:client2"
        - "clients:client3"
        - "clients:client4"
        - "HttpOkClient1"
        - "HttpOkClient2"
        - "HttpOkClient3"
        - "HttpOkClient4"

    - name: "Start Zope Clients via Supervisor"
      supervisorctl:
        name={{ item }}
        state=started
      with_items:
        - "clients:client1"
        - "clients:client2"
        - "clients:client3"
        - "clients:client4"
        - "HttpOkClient1"
        - "HttpOkClient2"
        - "HttpOkClient3"
        - "HttpOkClient4"

    - name: "Enable Production Server / Zope-Clients (Serverraum Ludwig27) on Load Balancing WebProxy1"
      haproxy:
        state=enabled
        host={{ ansible_hostname }}-{{ item.name }}
        backend={{ item.backend }}
        wait=yes
      delegate_to: webproxy1.verwaltung.uni-muenchen.de
      ignore_errors: yes
      with_items:
        - { backend: '{{ ansible_hostname }}-clients', name: 'client1' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client2' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client3' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client4' }
        - { backend: 'plone-cluster-ludwig27', name: 'clients' }

    - name: "Enable Disable Production Server / Zope-Clients (Serverraum Ludwig27) on Load Balancing WebProxy2"
      haproxy:
        state=enabled
        host={{ ansible_hostname }}-{{ item.name }}
        backend={{ item.backend }}
        wait=yes
      delegate_to: webproxy2.verwaltung.uni-muenchen.de
      ignore_errors: yes
      with_items:
        - { backend: '{{ ansible_hostname }}-clients', name: 'client1' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client2' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client3' }
        - { backend: '{{ ansible_hostname }}-clients', name: 'client4' }
        - { backend: 'plone-cluster-ludwig27', name: 'clients' }

